
<div id="ys-app">

	<div id="ys-player"></div>

	<div id="ys-player-bar">
		<div class="ys-loading-bar"></div>
	</div>
	<!-- #ys-player-bar -->

	<mysubscribers></mysubscribers>

	<div id="ys-page">
		<button class="mute">Unmute</button>
		<button class="previous">Previous</button>
		<button class="next">Next</button>
		<button class="pause">Pause</button>


		<script>
		  // Load the IFrame Player API code asynchronously.
		  var tag = document.createElement('script');
		  tag.src = "https://www.youtube.com/player_api";
		  var firstScriptTag = document.getElementsByTagName('script')[0];
		  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

		  // Replace the 'ys-player' element with an <iframe> and
		  // YouTube player after the API code downloads.
		  var player;
		  function onYouTubePlayerAPIReady() {
		    player = new YT.Player('ys-player', {
		      playerVars: {
		        listType: "user_uploads",
		        list: "devinsupertramp",
		        enablejsapi: 1,
		        autoplay: 1,
		        controls: 0,
		        iv_load_policy: 3,
		        showinfo: 0,
		        loop: 1,
		        modestbranding: 1
		      },
		      events: {
		        'onReady': onPlayerReady
		      }
		    });

		    
		    function onPlayerReady (event) {
		      resize();
		      event.target.mute();
		      event.target.loadPlaylist({
		        listType: "user_uploads",
		        list: "devinsupertramp"
		      });
		      loadingBar();
		    };
			    
		    var resize = function() {
		      var width = $(window).width(),
		          pWidth, // player width, to be defined
		          height = $(window).height(),
		          pHeight, // player height, tbd
		          currentPlayer = $('#ys-player');

		      // when screen aspect ratio differs from video, video must center and underlay one dimension
					if (width / (16/9) < height) { // if new video height < window height (gap underneath)
						pWidth = Math.ceil(height * (16/9)); // get new player width
		      	currentPlayer.width(pWidth).height(height).css({left: (width - pWidth) / 2, top: 0}); // player width is greater, offset left; reset top
		      } else { // new video width < window width (gap to right)
		        pHeight = Math.ceil(width / options.ratio); // get new player height
		        currentPlayer.width(width).height(pHeight).css({left: 0, top: (height - pHeight) / 2}); // player height is greater, offset top; reset left
		      }
	  		}
		    
		    
		    $(window).on('resize', resize)
		    
		    $('.mute').on('click', function(e) {
					if(player.isMuted()) { 
					  player.unMute();
					  $(this).text("Mute");
					} else {
					  player.mute();
					  $(this).text("Unmute");
					}
		    });
		    
		    $('.previous').on('click', function() {
		      player.previousVideo();
		    });
		    
		    $('.next').on('click', function() {
		      player.nextVideo();
		    });
		    
		    $('.pause').on('click', function(e) {
					if(player.getPlayerState() === 1) { 
					  player.pauseVideo();
					  $(this).text("Play");
					} else {
					  player.playVideo();
					  $(this).text("Pause");
					}
		    });

		    var loadingBar = setInterval(function() {
		    	var loadingBar = $('.ys-loading-bar');
		    	var duration = player.getDuration();
		    	var currentTime = player.getCurrentTime();
		    	var percentLoaded = currentTime / duration;
		    	if(player.getPlayerState() === 1) { // playing
		    		loadingBar.width((percentLoaded * 100) + "%");
		    	} else if (player.getPlayerState() === -1 && percentLoaded > 0) { // unstarted (between videos)
		    		loadingBar.width("100%");
		    	}
		    }, 10);
		  };
		    
		        
		</script>
		<div id="ys-stats">
			<div id="ys-subs">
				<strong>1,413,925</strong> views
			</div>
			<!-- #ys-subs -->
			<ul id="ys-social-links">
				<li><a href="#">Facebook</a></li>
				<li><a href="#">Twitter</a></li>
				<li><a href="#">Instagram</a></li>
				<li><a href="#">Tumblr</a></li>
				<li><a href="#">LinkedIn</a></li>
			</ul>
			<!-- #ys-social-links -->
			<br />
			<div id="ys-views">
				<strong>243,943,922</strong> subscribers
			</div>
			<!-- #ys-views -->
		</div>
		<!-- #ys-stats -->

		<div id="ys-player-controls">Player Controls</div><!-- #ys-player-controls -->

		<div id="ys-content">
			<a id="ys-logo" href="#"></a><!-- #ys-logo -->
			<masthead></masthead>
			<div id="ys-viewport" ng-view></div><!-- #ys-viewport -->
		</div>
		<!-- #ys-content -->
	</div>
	<!-- #ys-page -->

	<myvideos></myvideos>









































</div>
<!-- #ys-app -->




